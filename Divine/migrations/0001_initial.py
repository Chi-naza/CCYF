# Generated by Django 4.1.3 on 2022-12-08 23:56

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('dept', models.CharField(blank=True, max_length=50)),
                ('faculty', models.CharField(blank=True, max_length=50)),
                ('student', models.BooleanField(default=False)),
                ('age', models.DateField(default=django.utils.timezone.now)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=8)),
                ('phone_number', models.CharField(max_length=15)),
                ('skill_or_talent', models.CharField(blank=True, max_length=50)),
                ('position', models.CharField(choices=[('Member', 'Member'), ('President', 'President'), ('Brothers Co-ordinator', 'Brothers Co-ordinator'), ('Senior Colleague', 'Senior Colleague')], default='Member', max_length=22)),
                ('address', models.CharField(blank=True, max_length=120)),
                ('town', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('level', models.CharField(choices=[('100 level', '100 level'), ('200 level', '200 level'), ('300 level', '300 level'), ('400 level', '400 level'), ('500 level', '500 level'), ('Final year', 'Final year'), ('Not a student', 'Not a student')], default='Not a student', max_length=13)),
                ('twitter', models.CharField(blank=True, max_length=120)),
                ('facebook', models.CharField(blank=True, max_length=120)),
                ('instagram', models.CharField(blank=True, max_length=120)),
                ('whatsapp', models.CharField(blank=True, max_length=120)),
                ('image', models.ImageField(default='default.jpg', upload_to='membersImage')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
